// Generated by view binder compiler. Do not edit!
package com.example.workouttracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.airbnb.lottie.LottieAnimationView;
import com.example.workouttracker.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IntervalMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LottieAnimationView arrowGreen;

  @NonNull
  public final LottieAnimationView arrowGreen2;

  @NonNull
  public final LottieAnimationView arrowGreen3;

  @NonNull
  public final Button buttonStartIntervals;

  @NonNull
  public final EditText etCycles;

  @NonNull
  public final EditText etRestTime;

  @NonNull
  public final EditText etTotalTime;

  @NonNull
  public final EditText etWorkTime;

  @NonNull
  public final FloatingActionButton fbMinusBreakInterval;

  @NonNull
  public final FloatingActionButton fbMinusCycleInterval;

  @NonNull
  public final FloatingActionButton fbMinusWorkInterval;

  @NonNull
  public final FloatingActionButton fbPlusCyclesInterval;

  @NonNull
  public final FloatingActionButton fbPlusRestInterval;

  @NonNull
  public final FloatingActionButton fbPlusWorkInterval;

  @NonNull
  public final TextView tvBreakHeader;

  @NonNull
  public final TextView tvCycleHeader;

  @NonNull
  public final TextView tvTimerHeader;

  @NonNull
  public final TextView tvTotalTimeHeader;

  @NonNull
  public final TextView tvWorkTime;

  private IntervalMainBinding(@NonNull ScrollView rootView, @NonNull LottieAnimationView arrowGreen,
      @NonNull LottieAnimationView arrowGreen2, @NonNull LottieAnimationView arrowGreen3,
      @NonNull Button buttonStartIntervals, @NonNull EditText etCycles,
      @NonNull EditText etRestTime, @NonNull EditText etTotalTime, @NonNull EditText etWorkTime,
      @NonNull FloatingActionButton fbMinusBreakInterval,
      @NonNull FloatingActionButton fbMinusCycleInterval,
      @NonNull FloatingActionButton fbMinusWorkInterval,
      @NonNull FloatingActionButton fbPlusCyclesInterval,
      @NonNull FloatingActionButton fbPlusRestInterval,
      @NonNull FloatingActionButton fbPlusWorkInterval, @NonNull TextView tvBreakHeader,
      @NonNull TextView tvCycleHeader, @NonNull TextView tvTimerHeader,
      @NonNull TextView tvTotalTimeHeader, @NonNull TextView tvWorkTime) {
    this.rootView = rootView;
    this.arrowGreen = arrowGreen;
    this.arrowGreen2 = arrowGreen2;
    this.arrowGreen3 = arrowGreen3;
    this.buttonStartIntervals = buttonStartIntervals;
    this.etCycles = etCycles;
    this.etRestTime = etRestTime;
    this.etTotalTime = etTotalTime;
    this.etWorkTime = etWorkTime;
    this.fbMinusBreakInterval = fbMinusBreakInterval;
    this.fbMinusCycleInterval = fbMinusCycleInterval;
    this.fbMinusWorkInterval = fbMinusWorkInterval;
    this.fbPlusCyclesInterval = fbPlusCyclesInterval;
    this.fbPlusRestInterval = fbPlusRestInterval;
    this.fbPlusWorkInterval = fbPlusWorkInterval;
    this.tvBreakHeader = tvBreakHeader;
    this.tvCycleHeader = tvCycleHeader;
    this.tvTimerHeader = tvTimerHeader;
    this.tvTotalTimeHeader = tvTotalTimeHeader;
    this.tvWorkTime = tvWorkTime;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static IntervalMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IntervalMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.interval_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IntervalMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrow_green;
      LottieAnimationView arrowGreen = rootView.findViewById(id);
      if (arrowGreen == null) {
        break missingId;
      }

      id = R.id.arrow_green2;
      LottieAnimationView arrowGreen2 = rootView.findViewById(id);
      if (arrowGreen2 == null) {
        break missingId;
      }

      id = R.id.arrow_green3;
      LottieAnimationView arrowGreen3 = rootView.findViewById(id);
      if (arrowGreen3 == null) {
        break missingId;
      }

      id = R.id.button_start_intervals;
      Button buttonStartIntervals = rootView.findViewById(id);
      if (buttonStartIntervals == null) {
        break missingId;
      }

      id = R.id.et_cycles;
      EditText etCycles = rootView.findViewById(id);
      if (etCycles == null) {
        break missingId;
      }

      id = R.id.et_rest_time;
      EditText etRestTime = rootView.findViewById(id);
      if (etRestTime == null) {
        break missingId;
      }

      id = R.id.et_total_time;
      EditText etTotalTime = rootView.findViewById(id);
      if (etTotalTime == null) {
        break missingId;
      }

      id = R.id.et_work_time;
      EditText etWorkTime = rootView.findViewById(id);
      if (etWorkTime == null) {
        break missingId;
      }

      id = R.id.fb_minus_break_interval;
      FloatingActionButton fbMinusBreakInterval = rootView.findViewById(id);
      if (fbMinusBreakInterval == null) {
        break missingId;
      }

      id = R.id.fb_minus_cycle_interval;
      FloatingActionButton fbMinusCycleInterval = rootView.findViewById(id);
      if (fbMinusCycleInterval == null) {
        break missingId;
      }

      id = R.id.fb_minus_work_interval;
      FloatingActionButton fbMinusWorkInterval = rootView.findViewById(id);
      if (fbMinusWorkInterval == null) {
        break missingId;
      }

      id = R.id.fb_plus_cycles_interval;
      FloatingActionButton fbPlusCyclesInterval = rootView.findViewById(id);
      if (fbPlusCyclesInterval == null) {
        break missingId;
      }

      id = R.id.fb_plus_rest_interval;
      FloatingActionButton fbPlusRestInterval = rootView.findViewById(id);
      if (fbPlusRestInterval == null) {
        break missingId;
      }

      id = R.id.fb_plus_work_interval;
      FloatingActionButton fbPlusWorkInterval = rootView.findViewById(id);
      if (fbPlusWorkInterval == null) {
        break missingId;
      }

      id = R.id.tv_break_header;
      TextView tvBreakHeader = rootView.findViewById(id);
      if (tvBreakHeader == null) {
        break missingId;
      }

      id = R.id.tv_cycle_header;
      TextView tvCycleHeader = rootView.findViewById(id);
      if (tvCycleHeader == null) {
        break missingId;
      }

      id = R.id.tv_timer_header;
      TextView tvTimerHeader = rootView.findViewById(id);
      if (tvTimerHeader == null) {
        break missingId;
      }

      id = R.id.tv_total_time_header;
      TextView tvTotalTimeHeader = rootView.findViewById(id);
      if (tvTotalTimeHeader == null) {
        break missingId;
      }

      id = R.id.tv_work_time;
      TextView tvWorkTime = rootView.findViewById(id);
      if (tvWorkTime == null) {
        break missingId;
      }

      return new IntervalMainBinding((ScrollView) rootView, arrowGreen, arrowGreen2, arrowGreen3,
          buttonStartIntervals, etCycles, etRestTime, etTotalTime, etWorkTime, fbMinusBreakInterval,
          fbMinusCycleInterval, fbMinusWorkInterval, fbPlusCyclesInterval, fbPlusRestInterval,
          fbPlusWorkInterval, tvBreakHeader, tvCycleHeader, tvTimerHeader, tvTotalTimeHeader,
          tvWorkTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
